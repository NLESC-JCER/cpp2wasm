# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  entangle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check all entangled files are in sync with Markdown
        run: make check
  cpp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Run C++ examples
        run: make test-cli test-cgi
  python:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Redis is needed for Celery
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.8" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified

      - name: Install Python dependencies
        run: make py-deps && pip install httpie

      - name: Run Python example
        run: make test-py

      - name: Start web application in background
        run: make run-webapp 2>&1 | tee ./run-webapp.log &

      - name: Test web application
        run: http --ignore-stdin -f localhost:5001 epsilon=0.001 guess=-20

      - name: Start web service in background
        run: make run-webservice 2>&1 | tee ./run-webservice.log &

      - name: Test web service
        run: make test-webservice

      - name: Start Celery web app in background
        run: make run-celery-webapp 2>&1 | tee ./run-celery-webapp.log  &

      - name: Start Celery worker in background
        run: |
          cd src/py
          PYTHONPATH=$PWD/../.. celery -A tasks worker 2>&1 | tee ./run-celery-worker.log &
          cd ../..

      - name: Test Celery web app
        run: |
          http --ignore-stdin -hf localhost:5000 epsilon=0.001 guess=-20 | tee response.txt
          # Parse result url from response
          RESULT_URL=$(cat response.txt |grep Location |awk '{print $2}')
          sleep 2
          http --ignore-stdin $RESULT_URL

      - name: Upload log of services
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: service-logs
          path: ./run-*.log
  wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install emscripten
        uses: mymindstorm/setup-emsdk@v4

      - name: Build WebAssembly module
        run: make build-wasm

      - name: Start web server for hosting files in background
        run: make host-files 2>&1 | tee ./web-server.log &

      - name: Run tests
        run: make test-wasm

      - name: Upload log of web server
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: web-server-log
          path: ./web-server.log
